// ==UserScript==
// @name Omnivox UI Optimizer
// @description A simple user script to improve the UI of Omnivox.
// @version 1.3.8
// @author Evan Luo
// @homepage https://github.com/evannotfound/omnivox-optimizer
// @match *://*.omnivox.ca/*
// @downloadURL https://github.com/evannotfound/omnivox-optimizer/releases/latest/download/omnivox-optimizer.user.js
// @grant GM_xmlhttpRequest
// @license GPL-3.0
// @run-at document-start
// @updateURL https://github.com/evannotfound/omnivox-optimizer/releases/latest/download/omnivox-optimizer.meta.js
// ==/UserScript==

"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateomnivox_optimizer"]("main",{

/***/ "./src/modules/lea/assignments.js":
/*!****************************************!*\
  !*** ./src/modules/lea/assignments.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   optimizeAssignmentsList: () => (/* binding */ optimizeAssignmentsList)\n/* harmony export */ });\nfunction optimizeAssignmentsList() {\n    // Add debug logging\n    console.log('Optimizing assignments list...');\n    \n    // Find the main assignments table (the outer one)\n    const mainTable = document.querySelector('table[width=\"550\"]');\n    if (!mainTable) {\n        console.log('No main table found');\n        return;\n    }\n\n    // Find the inner assignments table\n    const assignmentsTable = document.querySelector('#tabListeTravEtu');\n    if (!assignmentsTable) {\n        console.log('No assignments table found');\n        return;\n    }\n\n    // Create main container\n    const pageContainer = document.createElement('div');\n    pageContainer.className = 'assignments-page';\n\n    // Move the title elements\n    const titleElements = document.querySelectorAll('.TitrePageLigne1, .TitrePageLigne2');\n    const titleContainer = document.createElement('div');\n    titleContainer.className = 'page-header';\n    titleElements.forEach(el => {\n        titleContainer.appendChild(el.cloneNode(true));\n    });\n    pageContainer.appendChild(titleContainer);\n\n    // Create assignments container\n    const mainContainer = document.createElement('div');\n    mainContainer.className = 'assignments-container';\n    \n    // Process each category\n    const categories = [];\n    let currentCategory = null;\n    \n    // Process each row to group assignments by category\n    assignmentsTable.querySelectorAll('tr').forEach(row => {\n        const categoryTitle = row.querySelector('.TitreCategorie');\n        if (categoryTitle) {\n            if (currentCategory) {\n                categories.push(currentCategory);\n            }\n            currentCategory = {\n                title: categoryTitle.textContent.trim(),\n                assignments: []\n            };\n        } else {\n            const assignment = row.querySelector('.LigneListTrav1, .LigneListTrav2');\n            if (assignment && currentCategory) {\n                const title = row.querySelector('a')?.textContent?.trim();\n                const link = row.querySelector('a')?.getAttribute('onclick')?.match(/OpenCentre\\('([^']+)'/)?.[1];\n                const date = row.querySelector('span')?.textContent?.trim();\n                const submissionMethod = row.querySelector('.RemTrav_Sommaire_ProchainsTravauxDesc')?.textContent?.trim();\n                \n                // Update status extraction to look at the correct column and check for submission info\n                const statusCell = row.querySelector('td[colspan=\"4\"]');\n                const submissionLink = statusCell?.querySelector('a');\n                const status = submissionLink ? 'Submitted' : '-';\n                const isUnread = row.querySelector('.CellEnonceNonVisualise img[src*=\"TravailNonVisualise\"]') !== null;\n                \n                if (title && link) {\n                    currentCategory.assignments.push({\n                        title,\n                        link,\n                        date,\n                        submissionMethod,\n                        status,\n                        isUnread\n                    });\n                }\n            }\n        }\n    });\n    \n    if (currentCategory) {\n        categories.push(currentCategory);\n    }\n\n    // Create the new grid-based interface\n    categories.forEach(category => {\n        const categoryContainer = document.createElement('div');\n        categoryContainer.className = 'category-container';\n\n        const categoryHeader = document.createElement('div');\n        categoryHeader.className = 'category-header';\n        categoryHeader.textContent = category.title;\n        categoryContainer.appendChild(categoryHeader);\n\n        const assignmentsGrid = document.createElement('div');\n        assignmentsGrid.className = 'assignments-grid';\n\n        category.assignments.forEach(assignment => {\n            const assignmentCard = document.createElement('div');\n            assignmentCard.className = `assignment-card ${assignment.isUnread ? 'unread' : ''} ${assignment.status === 'Submitted' ? 'submitted' : ''}`;\n            \n            // Extract the actual URL from the onclick handler\n            const cleanLink = assignment.link.replace(/^OpenCentre\\('([^']+)'.*$/, '$1');\n            \n            // Add click handler to the entire card\n            assignmentCard.onclick = () => {\n                OpenCentre(cleanLink, 'DepotTravailPopup', 'toolbar=no,location=no,directories=no,status=no,menubar=no,resizable=yes,scrollbars=yes', 700, 780, true);\n            };\n            assignmentCard.style.cursor = 'pointer'; // Add pointer cursor to indicate clickability\n            \n            assignmentCard.innerHTML = `\n                <div class=\"assignment-header\">\n                    <div class=\"assignment-title-row\">\n                        <span class=\"assignment-title\">${assignment.title}</span>\n                        ${createStatusIndicators(assignment)}\n                    </div>\n                    ${assignment.date ? `\n                        <div class=\"due-date ${!assignment.status.includes('Submitted') && isOverdue(assignment.date) ? 'overdue' : ''}\">\n                            <span class=\"due-label\">Due:</span>\n                            <span class=\"date\">${formatDate(assignment.date)}</span>\n                            ${!isOverdue(assignment.date) && formatRelativeDate(assignment.date) ? `\n                                <span class=\"relative-date-badge\">${formatRelativeDate(assignment.date)}</span>\n                            ` : ''}\n                        </div>\n                    ` : ''}\n                </div>\n                <div class=\"assignment-details\">\n                    ${assignment.submissionMethod ? `\n                        <div class=\"submission-info\">\n                            <span class=\"label\">Submit via:</span>\n                            <span class=\"method\">${assignment.submissionMethod}</span>\n                        </div>\n                    ` : ''}\n                    ${assignment.status !== '-' ? `\n                        <div class=\"status-info\">\n                            <span class=\"label\">Status:</span>\n                            <span class=\"status ${assignment.status.includes('Submitted') ? 'submitted' : ''}\">${assignment.status}</span>\n                        </div>\n                    ` : ''}\n                </div>\n               \n            `;\n            assignmentsGrid.appendChild(assignmentCard);\n        });\n\n        categoryContainer.appendChild(assignmentsGrid);\n        mainContainer.appendChild(categoryContainer);\n    });\n\n    pageContainer.appendChild(mainContainer);\n\n    // Replace the entire table with the new container\n    const centerElement = document.querySelector('center');\n    if (centerElement) {\n        // Remove all children from center\n        while (centerElement.firstChild) {\n            centerElement.removeChild(centerElement.firstChild);\n        }\n        // Add our new container\n        centerElement.appendChild(pageContainer);\n    }\n}\n\nfunction isOverdue(dateStr) {\n    const dueDate = new Date(dateStr);\n    const now = new Date();\n    // Don't mark as overdue if it's within 24 hours of now (to handle same-day deadlines better)\n    return dueDate < now;\n}\n\nfunction formatDate(dateStr) {\n    const date = new Date(dateStr);\n    return date.toLocaleDateString('en-US', { \n        weekday: 'short',\n        month: 'short', \n        day: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit'\n    });\n}\n\nfunction formatRelativeDate(dateStr) {\n    const date = new Date(dateStr);\n    const now = new Date();\n    const diffTime = date - now;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    // Only return relative dates for upcoming assignments\n    if (diffDays <= 0) return null;\n    \n    if (diffDays === 1) return 'Tomorrow';\n    if (diffDays < 7) return `In ${diffDays} days`;\n    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks`;\n    \n    return null;\n}\n\nfunction createStatusIndicators(assignment) {\n    return `\n        <div class=\"status-indicators\">\n            ${assignment.isUnread ? `\n                <div class=\"indicator new-indicator\" title=\"New\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-diamond-plus\"><path d=\"M12 8v8\"/><path d=\"M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z\"/><path d=\"M8 12h8\"/></svg>\n                </div>\n            ` : ''}\n            ${assignment.status.includes('Submitted') ? `\n                <div class=\"indicator submitted-indicator\" title=\"Submitted\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-circle-check\">\n                        <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n                        <path d=\"m9 12 2 2 4-4\"/>\n                    </svg>\n                </div>\n            ` : ''}\n            ${!assignment.status.includes('Submitted') && isOverdue(assignment.date) ? `\n                <div class=\"indicator overdue-indicator\" title=\"Overdue\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-alarm-clock-minus\">\n                        <circle cx=\"12\" cy=\"13\" r=\"8\"/>\n                        <path d=\"M5 3 2 6\"/>\n                        <path d=\"m22 6-3-3\"/>\n                        <path d=\"M6.38 18.7 4 21\"/>\n                        <path d=\"M17.64 18.67 20 21\"/>\n                        <path d=\"M9 13h6\"/>\n                    </svg>\n                </div>\n            ` : ''}\n        </div>\n    `;\n}\n\n\n//# sourceURL=webpack://omnivox-optimizer/./src/modules/lea/assignments.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("3e9cc413df5f96124154")
/******/ })();
/******/ 
/******/ }
);
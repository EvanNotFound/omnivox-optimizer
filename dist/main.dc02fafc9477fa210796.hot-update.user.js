// ==UserScript==
// @name Omnivox UI Optimizer
// @description A simple user script to improve the UI of Omnivox.
// @version 1.3.16
// @author Evan Luo
// @homepage https://github.com/evannotfound/omnivox-optimizer
// @match *://*.omnivox.ca/*
// @downloadURL https://github.com/evannotfound/omnivox-optimizer/releases/latest/download/omnivox-optimizer.user.js
// @grant GM_xmlhttpRequest
// @license GPL-3.0
// @run-at document-start
// @updateURL https://github.com/evannotfound/omnivox-optimizer/releases/latest/download/omnivox-optimizer.meta.js
// ==/UserScript==

"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateomnivox_optimizer"]("main",{

/***/ "./src/modules/lea/documents.js":
/*!**************************************!*\
  !*** ./src/modules/lea/documents.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   optimizeCourseDocuments: () => (/* binding */ optimizeCourseDocuments)\n/* harmony export */ });\nfunction optimizeCourseDocuments() {\n\tconst documentsTable = document.querySelector(\"#tblDocuments\");\n\tif (!documentsTable) return;\n\n\tconst resolveDocumentUrl = (anchor) => {\n\t\tif (!anchor) return null;\n\t\tconst hrefAttr = anchor.getAttribute(\"href\") || \"\";\n\t\tconst patterns = [\n\t\t\t/'(Visualise(?:Document|Video)\\.aspx[^']*)'/i,\n\t\t\t/\"(Visualise(?:Document|Video)\\.aspx[^\"]*)\"/i,\n\t\t\t/(Visualise(?:Document|Video)\\.aspx[^'\"]*)/i,\n\t\t];\n\n\t\tfor (const pattern of patterns) {\n\t\t\tconst match = hrefAttr.match(pattern);\n\t\t\tif (match?.[1]) return match[1];\n\t\t}\n\n\t\tif (hrefAttr && !hrefAttr.startsWith(\"javascript:\")) {\n\t\t\treturn hrefAttr;\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst toAbsoluteUrl = (url) => {\n\t\tif (!url) return null;\n\t\ttry {\n\t\t\treturn new URL(url, window.location.href).toString();\n\t\t} catch {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst createButton = (className) => {\n\t\tconst button = document.createElement(\"button\");\n\t\tbutton.type = \"button\";\n\t\tbutton.className = className;\n\t\treturn button;\n\t};\n\n\tconst setButtonInteractiveState = (button, disabled) => {\n\t\tbutton.disabled = disabled;\n\t\tbutton.classList.toggle(\"is-active\", !disabled);\n\t};\n\n\tconst mainContainer = document.createElement(\"div\");\n\tmainContainer.className = \"documents-container\";\n\n\tconst centerContainer = document.querySelector(\"#ctl00 > center\");\n\n\tcenterContainer?.querySelectorAll(\"br\").forEach((br) => {\n\t\tbr.remove();\n\t});\n\n\tconst allEntries = [];\n\n\tconst markEntryRemote = async (entry) => {\n\t\tif (!entry.isUnread) return;\n\n\t\tif (entry.viewUrl) {\n\t\t\ttry {\n\t\t\t\tawait fetch(entry.viewUrl, { credentials: \"include\" });\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(\"Unable to mark document as read automatically\", error);\n\t\t\t}\n\t\t}\n\n\t\tentry.markLocal();\n\t};\n\n\tconst categories = documentsTable.querySelectorAll(\".CategorieDocument\");\n\n\tcategories.forEach((category) => {\n\t\tconst categoryContainer = document.createElement(\"div\");\n\t\tcategoryContainer.className = \"category-container\";\n\n\t\tconst categoryHeader = document.createElement(\"div\");\n\t\tcategoryHeader.className = \"category-header flex items-center justify-between gap-3 flex-wrap\";\n\n\t\tconst categoryTitle =\n\t\t\tcategory.querySelector(\".DisDoc_TitreCategorie\")?.textContent?.trim() ||\n\t\t\t\"Documents\";\n\n\t\tconst headerTitle = document.createElement(\"span\");\n\t\theaderTitle.className = \"text-left\";\n\t\theaderTitle.textContent = categoryTitle;\n\t\tcategoryHeader.appendChild(headerTitle);\n        \n\t\tcategoryContainer.appendChild(categoryHeader);\n\n\t\tconst gridContainer = document.createElement(\"div\");\n\t\tgridContainer.className = \"documents-grid\";\n\n\t\tconst documentRows = category.querySelectorAll(\n\t\t\t\".itemDataGrid, .itemDataGridAltern\"\n\t\t);\n\n\t\tconst docEntries = [];\n\n\t\tdocumentRows.forEach((row) => {\n\t\t\tconst title = row\n\t\t\t\t.querySelector(\".lblTitreDocumentDansListe\")\n\t\t\t\t?.textContent?.trim();\n\t\t\tconst date = row\n\t\t\t\t.querySelector(\".DocDispo\")\n\t\t\t\t?.textContent?.trim()\n\t\t\t\t.replace(\"since\", \"\")\n\t\t\t\t.trim();\n\t\t\tconst fileLink = row.querySelector(\".colVoirTelecharger a\");\n\t\t\tconst fileIcon = row.querySelector(\".colVoirTelecharger img\");\n\t\t\tconst fileSize = row\n\t\t\t\t.querySelector(\".colVoirTelecharger\")\n\t\t\t\t?.textContent?.trim()\n\t\t\t\t.split(\"\\n\")\n\t\t\t\t.pop()\n\t\t\t\t?.trim();\n\t\t\tconst isUnread = Boolean(row.querySelector(\".classeEtoileNouvDoc\"));\n\n\t\t\tif (!title || !fileLink) return;\n\n\t\t\tconst originalHref = fileLink.getAttribute(\"href\") || \"\";\n\t\t\tconst originalTarget = fileLink.getAttribute(\"target\") || \"\";\n\n\t\t\tconst viewUrl = resolveDocumentUrl(fileLink);\n\t\t\tconst absoluteViewUrl = toAbsoluteUrl(viewUrl);\n\n\t\t\tconst fallbackUrl =\n\t\t\t\toriginalHref && !originalHref.toLowerCase().startsWith(\"javascript:\")\n\t\t\t\t\t? fileLink.href\n\t\t\t\t\t: null;\n\n\t\t\tconst docCard = document.createElement(\"a\");\n\t\t\tdocCard.className =\n\t\t\t\t\"flex flex-col items-start gap-4 justify-between p-4 bg-white rounded-xl border border-neutral-200 shadow-sm shadow-neutral-100 transition-all duration-200 relative hover:-translate-y-0.5 hover:border-neutral-300 no-underline group\";\n\n\t\t\tconst cardHref = absoluteViewUrl || fallbackUrl || \"#\";\n\t\t\tdocCard.href = cardHref;\n\n\t\t\tif (originalTarget) {\n\t\t\t\tdocCard.target = originalTarget;\n\t\t\t\tif (originalTarget === \"_blank\") {\n\t\t\t\t\tdocCard.rel = \"noopener noreferrer\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst unreadBadge = isUnread\n\t\t\t\t? `<span class=\"absolute top-3 right-3 flex items-center gap-1.5 text-xs font-semibold text-red-600 tracking-wide leading-none whitespace-nowrap rounded-full bg-red-800/5 px-2 py-1\" role=\"status\" aria-label=\"Unread document\">\n\t\t\t\t\t<span class=\"uppercase\">Unread</span>\n\t\t\t\t\t<span class=\"w-2 h-2 rounded-full bg-red-600\" aria-hidden=\"true\"></span>\n\t\t\t\t</span>`\n\t\t\t\t: \"\";\n\n\t\t\tdocCard.innerHTML = `\n\t\t\t\t<div class=\"flex flex-col gap-4\">\n\t\t\t\t\t${unreadBadge}\n\t\t\t\t\t<div class=\"flex-shrink-0 w-6 h-6 flex items-center justify-center\">\n\t\t\t\t\t\t${fileIcon ? `<img src=\"${fileIcon.src}\" alt=\"File type\" class=\"w-6 h-6 object-contain\">` : \"\"}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"w-full flex flex-col gap-2\">\n                    <div class=\"text-base font-semibold text-slate-900 no-underline tracking-tight leading-tight text-left group-hover:text-red-800 text-neutral-600\">${title}</div>\n\t\t\t\t\t<div class=\"flex justify-between items-center w-full\">\n\t\t\t\t\t\t${date ? `<span class=\"text-xs text-neutral-500\">${date}</span>` : \"\"}\n\t\t\t\t\t\t${fileSize ? `<span class=\"text-xs text-neutral-500\">${fileSize}</span>` : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tconst entry = {\n\t\t\t\tcard: docCard,\n\t\t\t\tviewUrl: absoluteViewUrl,\n\t\t\t\tisUnread,\n\t\t\t\tlisteners: new Set(),\n\t\t\t};\n\n\t\t\tentry.markLocal = () => {\n\t\t\t\tif (!entry.isUnread) return;\n\t\t\t\tentry.isUnread = false;\n\t\t\t\tconst indicator = entry.card.querySelector('[role=\"status\"]');\n\t\t\t\tif (indicator) indicator.remove();\n\t\t\t\tentry.listeners.forEach((listener) => listener(entry));\n\t\t\t};\n\n\t\t\tentry.addListener = (listener) => {\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\tentry.listeners.add(listener);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdocCard.addEventListener(\"click\", (event) => {\n\t\t\t\tif (!absoluteViewUrl && originalHref.toLowerCase().startsWith(\"javascript:\")) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// eslint-disable-next-line no-eval\n\t\t\t\t\t\twindow.eval(originalHref.replace(/^javascript:/i, \"\"));\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.warn(\"Unable to trigger document handler\", error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twindow.requestAnimationFrame(() => entry.markLocal());\n\t\t\t});\n\n\t\t\tdocEntries.push(entry);\n\t\t\tallEntries.push(entry);\n\t\t\tgridContainer.appendChild(docCard);\n\t\t});\n\n\t\tif (docEntries.length) {\n\t\t\tconst actions = document.createElement(\"div\");\n\t\t\tactions.className = \"category-actions\";\n\n\t\t\tconst readAllButton = createButton(\"category-read-all\");\n\t\t\treadAllButton.textContent = \"Mark all read\";\n\t\t\tsetButtonInteractiveState(readAllButton, true);\n\n\t\t\tconst updateCategoryButton = () => {\n\t\t\t\tif (readAllButton.dataset.state === \"busy\") return;\n\n\t\t\t\tconst unreadCount = docEntries.filter((entry) => entry.isUnread).length;\n\t\t\t\tif (!unreadCount) {\n\t\t\t\t\tsetButtonInteractiveState(readAllButton, true);\n\t\t\t\t\treadAllButton.textContent = \"All read\";\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetButtonInteractiveState(readAllButton, false);\n\t\t\t\treadAllButton.textContent =\n\t\t\t\t\tunreadCount === docEntries.length\n\t\t\t\t\t\t? `Mark all read (${unreadCount})`\n\t\t\t\t\t\t: `Mark remaining (${unreadCount})`;\n\t\t\t};\n\n\t\t\treadAllButton.addEventListener(\"click\", async () => {\n\t\t\t\tconst unreadEntries = docEntries.filter((entry) => entry.isUnread);\n\t\t\t\tif (!unreadEntries.length) return;\n\n\t\t\t\treadAllButton.dataset.state = \"busy\";\n\t\t\t\tsetButtonInteractiveState(readAllButton, true);\n\t\t\t\treadAllButton.textContent = \"Marking…\";\n\n\t\t\t\tfor (const entry of unreadEntries) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tawait markEntryRemote(entry);\n\t\t\t\t}\n\n\t\t\t\tdelete readAllButton.dataset.state;\n\t\t\t\tupdateCategoryButton();\n\t\t\t});\n\n\t\t\tdocEntries.forEach((entry) => entry.addListener(updateCategoryButton));\n\t\t\tupdateCategoryButton();\n\n\t\t\tactions.appendChild(readAllButton);\n\t\t\tcategoryHeader.appendChild(actions);\n\t\t}\n\n\t\tcategoryContainer.appendChild(gridContainer);\n\t\tmainContainer.appendChild(categoryContainer);\n\t});\n\n\tif (allEntries.length) {\n\t\tconst readAllButton = createButton(\"documents-read-all\");\n\t\treadAllButton.textContent = \"Mark all read\";\n\t\tsetButtonInteractiveState(readAllButton, true);\n\n\t\tconst updateToolbarButton = () => {\n\t\t\tif (readAllButton.dataset.state === \"busy\") return;\n\n\t\t\tconst unreadCount = allEntries.filter((entry) => entry.isUnread).length;\n\t\t\tif (!unreadCount) {\n\t\t\t\tsetButtonInteractiveState(readAllButton, true);\n\t\t\t\treadAllButton.textContent = \"All read\";\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetButtonInteractiveState(readAllButton, false);\n\t\t\treadAllButton.textContent = `Mark all read (${unreadCount})`;\n\t\t};\n\n\t\treadAllButton.addEventListener(\"click\", async () => {\n\t\t\tconst unreadEntries = allEntries.filter((entry) => entry.isUnread);\n\t\t\tif (!unreadEntries.length) return;\n\n\t\t\treadAllButton.dataset.state = \"busy\";\n\t\t\tsetButtonInteractiveState(readAllButton, true);\n\t\t\treadAllButton.textContent = \"Marking…\";\n\n\t\t\tfor (const entry of unreadEntries) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait markEntryRemote(entry);\n\t\t\t}\n\n\t\t\tdelete readAllButton.dataset.state;\n\t\t\tupdateToolbarButton();\n\t\t});\n\n\t\tallEntries.forEach((entry) => entry.addListener(updateToolbarButton));\n\t\tupdateToolbarButton();\n\n\t\tconst pageTitleLine = document.querySelector(\".TitrePageLigne1\");\n\t\tif (pageTitleLine) {\n\t\t\tpageTitleLine.classList.add(\"documents-page-title\");\n\t\t\tconst inlineControls = document.createElement(\"span\");\n\t\t\tinlineControls.className = \"documents-toolbar-inline\";\n\t\t\tinlineControls.appendChild(readAllButton);\n\t\t\tpageTitleLine.appendChild(inlineControls);\n\t\t} else {\n\t\t\tconst toolbar = document.createElement(\"div\");\n\t\t\ttoolbar.className = \"documents-toolbar\";\n\t\t\ttoolbar.appendChild(readAllButton);\n\t\t\tmainContainer.insertBefore(toolbar, mainContainer.firstChild);\n\t\t}\n\t}\n\n\t// Replace table with new container\n\tdocumentsTable.parentNode.replaceChild(mainContainer, documentsTable);\n}\n\n\n//# sourceURL=webpack://omnivox-optimizer/./src/modules/lea/documents.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("fdbd1c3ddb556c41dd73")
/******/ })();
/******/ 
/******/ }
);